// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheSneakersMob.Infrastructure.Data;

namespace TheSneakersMob.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("TheSneakersMob.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BannedUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("TheSneakersMob.Models.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuctionerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AuctionerId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("TheSneakersMob.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Supreme"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Jordan"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Polo Ralph Lauren"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bape"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Burberry"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Champion"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Tommy Hilfiger"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Comme des Garcons"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Undercover"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Gucci"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Uniqlo"
                        },
                        new
                        {
                            Id = 14,
                            Name = "The North Face"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Palace"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Anti Social Social Club"
                        },
                        new
                        {
                            Id = 17,
                            Name = "American Vintage"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Off-White"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Saint Laurent Paris"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Stussy"
                        },
                        new
                        {
                            Id = 21,
                            Name = "LaurentMovie"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Comme Des Garcons Homme Plus"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Issey Miyake"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Guess"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Yohji Yamamoto"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Louis Vuitton"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Disney"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Rare"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Prada"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Vans"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Dior"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Raf SimonsNumber "
                        },
                        new
                        {
                            Id = 33,
                            Name = "(N)ine"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Fila"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Maison Margiela "
                        },
                        new
                        {
                            Id = 36,
                            Name = "Givenchy"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Cartoon Network"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Hysteric Glamour"
                        },
                        new
                        {
                            Id = 39,
                            Name = "AcneStudios"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Valentino"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Balenciaga"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Versace"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Travis Scott"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Reebok"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Dolce & Gabbana"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Stone Island"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Kanye West"
                        },
                        new
                        {
                            Id = 48,
                            Name = "NFL"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Kappa"
                        },
                        new
                        {
                            Id = 50,
                            Name = "RalphLauren"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Converse"
                        },
                        new
                        {
                            Id = 52,
                            Name = "NBA"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Lacoste"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Puma"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Harley Davidson"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Nautica"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Kith"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Rick Owens"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Carhartt"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Calvin Klein"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Kaws"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Fendi "
                        },
                        new
                        {
                            Id = 63,
                            Name = "Kenzo"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Visvim"
                        },
                        new
                        {
                            Id = 65,
                            Name = "A.P.C."
                        },
                        new
                        {
                            Id = 66,
                            Name = "Christian Dior"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Monsieur"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Gosha Rubchinskiy"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Fear of God"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Mickey Mouse"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Billionaire Boys Club"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Helmut Lang"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Patagonia"
                        },
                        new
                        {
                            Id = 75,
                            Name = "MLB"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Balmain"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Playboy"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Hanes"
                        });
                });

            modelBuilder.Entity("TheSneakersMob.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tops"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bottoms"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Outerwear"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Footwear"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Tailoring"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Accesories"
                        });
                });

            modelBuilder.Entity("TheSneakersMob.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TheSneakersMob.Models.ClientFollower", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("FollowerId")
                        .HasColumnType("int");

                    b.HasKey("ClientId", "FollowerId");

                    b.HasIndex("FollowerId");

                    b.ToTable("ClientFollower");
                });

            modelBuilder.Entity("TheSneakersMob.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SellId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("SellId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("TheSneakersMob.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("Style")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SizeId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TheSneakersMob.Models.Sell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("Sells");
                });

            modelBuilder.Entity("TheSneakersMob.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "US XXS/EU 40"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "US XS/EU 42/0"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "US S/ EU 44-46/1"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "US M/ EU 48-50/2"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "US L/EU 52-54/3"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "US XL/EU 56/4"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Description = "US S/EU 58/5"
                        },
                        new
                        {
                            Id = 100,
                            CategoryId = 2,
                            Description = "US 26/EU 42"
                        },
                        new
                        {
                            Id = 101,
                            CategoryId = 2,
                            Description = "US 27"
                        },
                        new
                        {
                            Id = 102,
                            CategoryId = 2,
                            Description = "US28/EU 44"
                        },
                        new
                        {
                            Id = 103,
                            CategoryId = 2,
                            Description = "US 29"
                        },
                        new
                        {
                            Id = 104,
                            CategoryId = 2,
                            Description = "US 30/EU 44"
                        },
                        new
                        {
                            Id = 105,
                            CategoryId = 2,
                            Description = "US 31"
                        },
                        new
                        {
                            Id = 106,
                            CategoryId = 2,
                            Description = "US 32/EU 48"
                        },
                        new
                        {
                            Id = 107,
                            CategoryId = 2,
                            Description = "US 33"
                        },
                        new
                        {
                            Id = 108,
                            CategoryId = 2,
                            Description = "US 34/EU 50"
                        },
                        new
                        {
                            Id = 109,
                            CategoryId = 2,
                            Description = "US 35"
                        },
                        new
                        {
                            Id = 110,
                            CategoryId = 2,
                            Description = "US 36/ EU 52"
                        },
                        new
                        {
                            Id = 111,
                            CategoryId = 2,
                            Description = "US 37"
                        },
                        new
                        {
                            Id = 112,
                            CategoryId = 2,
                            Description = "US 38/EU 54"
                        },
                        new
                        {
                            Id = 113,
                            CategoryId = 2,
                            Description = "US 39"
                        },
                        new
                        {
                            Id = 114,
                            CategoryId = 2,
                            Description = "US 40/EU 56"
                        },
                        new
                        {
                            Id = 115,
                            CategoryId = 2,
                            Description = "US 42/EU 58"
                        },
                        new
                        {
                            Id = 116,
                            CategoryId = 2,
                            Description = "US 43"
                        },
                        new
                        {
                            Id = 117,
                            CategoryId = 2,
                            Description = "US 44/EU 60"
                        },
                        new
                        {
                            Id = 201,
                            CategoryId = 3,
                            Description = "US XXS/EU 40"
                        },
                        new
                        {
                            Id = 202,
                            CategoryId = 3,
                            Description = "US XS/EU 42/0"
                        },
                        new
                        {
                            Id = 203,
                            CategoryId = 3,
                            Description = "US S/ EU 44-46/1"
                        },
                        new
                        {
                            Id = 204,
                            CategoryId = 3,
                            Description = "US M/ EU 48-50/2"
                        },
                        new
                        {
                            Id = 205,
                            CategoryId = 3,
                            Description = "US L/EU 52-54/3"
                        },
                        new
                        {
                            Id = 206,
                            CategoryId = 3,
                            Description = "US XL/EU 56/4"
                        },
                        new
                        {
                            Id = 207,
                            CategoryId = 3,
                            Description = "US S/EU 58/5"
                        },
                        new
                        {
                            Id = 301,
                            CategoryId = 4,
                            Description = "US 5/EU 37 "
                        },
                        new
                        {
                            Id = 302,
                            CategoryId = 4,
                            Description = "US 5.5/EU 38"
                        },
                        new
                        {
                            Id = 303,
                            CategoryId = 4,
                            Description = "US 6/EU 39"
                        },
                        new
                        {
                            Id = 304,
                            CategoryId = 4,
                            Description = "US 6.5/EU 39-40"
                        },
                        new
                        {
                            Id = 305,
                            CategoryId = 4,
                            Description = "US 7/EU 40"
                        },
                        new
                        {
                            Id = 306,
                            CategoryId = 4,
                            Description = "US 7.5/EU 40-41"
                        },
                        new
                        {
                            Id = 307,
                            CategoryId = 4,
                            Description = "US 8/EU 41"
                        },
                        new
                        {
                            Id = 308,
                            CategoryId = 4,
                            Description = "US 8.5/ EU 41-42"
                        },
                        new
                        {
                            Id = 309,
                            CategoryId = 4,
                            Description = "US 9/EU 42"
                        },
                        new
                        {
                            Id = 310,
                            CategoryId = 4,
                            Description = "US 9.5/EU 42-43"
                        },
                        new
                        {
                            Id = 311,
                            CategoryId = 4,
                            Description = "US 10/EU 43"
                        },
                        new
                        {
                            Id = 312,
                            CategoryId = 4,
                            Description = "US 10.5/EU 43-44"
                        },
                        new
                        {
                            Id = 313,
                            CategoryId = 4,
                            Description = "US 11/EU 44"
                        },
                        new
                        {
                            Id = 314,
                            CategoryId = 4,
                            Description = "US 11.5/EU 44-55"
                        },
                        new
                        {
                            Id = 315,
                            CategoryId = 4,
                            Description = "US 12/EU 55"
                        },
                        new
                        {
                            Id = 316,
                            CategoryId = 4,
                            Description = "US 12.5/EU 55-56"
                        },
                        new
                        {
                            Id = 317,
                            CategoryId = 4,
                            Description = "US 13/EU 56"
                        },
                        new
                        {
                            Id = 318,
                            CategoryId = 4,
                            Description = "US 14/EU 57"
                        },
                        new
                        {
                            Id = 319,
                            CategoryId = 4,
                            Description = "US 15/EU 58"
                        },
                        new
                        {
                            Id = 401,
                            CategoryId = 5,
                            Description = "34S"
                        },
                        new
                        {
                            Id = 402,
                            CategoryId = 5,
                            Description = "34R"
                        },
                        new
                        {
                            Id = 403,
                            CategoryId = 5,
                            Description = "36S"
                        },
                        new
                        {
                            Id = 404,
                            CategoryId = 5,
                            Description = "36R"
                        },
                        new
                        {
                            Id = 405,
                            CategoryId = 5,
                            Description = "38S"
                        },
                        new
                        {
                            Id = 406,
                            CategoryId = 5,
                            Description = "38R"
                        },
                        new
                        {
                            Id = 407,
                            CategoryId = 5,
                            Description = "38L"
                        },
                        new
                        {
                            Id = 408,
                            CategoryId = 5,
                            Description = "40S"
                        },
                        new
                        {
                            Id = 409,
                            CategoryId = 5,
                            Description = "40R"
                        },
                        new
                        {
                            Id = 411,
                            CategoryId = 5,
                            Description = "40R"
                        },
                        new
                        {
                            Id = 412,
                            CategoryId = 5,
                            Description = "40R"
                        },
                        new
                        {
                            Id = 413,
                            CategoryId = 5,
                            Description = "42S"
                        },
                        new
                        {
                            Id = 414,
                            CategoryId = 5,
                            Description = "42R"
                        },
                        new
                        {
                            Id = 415,
                            CategoryId = 5,
                            Description = "44L"
                        },
                        new
                        {
                            Id = 416,
                            CategoryId = 5,
                            Description = "44S"
                        },
                        new
                        {
                            Id = 417,
                            CategoryId = 5,
                            Description = "44R"
                        },
                        new
                        {
                            Id = 418,
                            CategoryId = 5,
                            Description = "44L"
                        },
                        new
                        {
                            Id = 419,
                            CategoryId = 5,
                            Description = "46S"
                        },
                        new
                        {
                            Id = 420,
                            CategoryId = 5,
                            Description = "46R"
                        },
                        new
                        {
                            Id = 421,
                            CategoryId = 5,
                            Description = "46L"
                        },
                        new
                        {
                            Id = 422,
                            CategoryId = 5,
                            Description = "48S"
                        },
                        new
                        {
                            Id = 423,
                            CategoryId = 5,
                            Description = "48R"
                        },
                        new
                        {
                            Id = 424,
                            CategoryId = 5,
                            Description = "48L"
                        },
                        new
                        {
                            Id = 425,
                            CategoryId = 5,
                            Description = "50S"
                        },
                        new
                        {
                            Id = 426,
                            CategoryId = 5,
                            Description = "50R"
                        },
                        new
                        {
                            Id = 427,
                            CategoryId = 5,
                            Description = "50L"
                        },
                        new
                        {
                            Id = 428,
                            CategoryId = 5,
                            Description = "52S"
                        },
                        new
                        {
                            Id = 429,
                            CategoryId = 5,
                            Description = "52R"
                        },
                        new
                        {
                            Id = 430,
                            CategoryId = 5,
                            Description = "52L"
                        },
                        new
                        {
                            Id = 431,
                            CategoryId = 5,
                            Description = "54S"
                        },
                        new
                        {
                            Id = 432,
                            CategoryId = 5,
                            Description = "54R"
                        },
                        new
                        {
                            Id = 433,
                            CategoryId = 5,
                            Description = "54L"
                        },
                        new
                        {
                            Id = 501,
                            CategoryId = 6,
                            Description = "One Size"
                        },
                        new
                        {
                            Id = 502,
                            CategoryId = 6,
                            Description = "26"
                        },
                        new
                        {
                            Id = 503,
                            CategoryId = 6,
                            Description = "28"
                        },
                        new
                        {
                            Id = 504,
                            CategoryId = 6,
                            Description = "30"
                        },
                        new
                        {
                            Id = 505,
                            CategoryId = 6,
                            Description = "32"
                        },
                        new
                        {
                            Id = 506,
                            CategoryId = 6,
                            Description = "34"
                        },
                        new
                        {
                            Id = 507,
                            CategoryId = 6,
                            Description = "36"
                        },
                        new
                        {
                            Id = 508,
                            CategoryId = 6,
                            Description = "38"
                        },
                        new
                        {
                            Id = 509,
                            CategoryId = 6,
                            Description = "40"
                        },
                        new
                        {
                            Id = 510,
                            CategoryId = 6,
                            Description = "42"
                        },
                        new
                        {
                            Id = 511,
                            CategoryId = 6,
                            Description = "44"
                        },
                        new
                        {
                            Id = 512,
                            CategoryId = 6,
                            Description = "46"
                        });
                });

            modelBuilder.Entity("TheSneakersMob.Models.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Long Sleeve"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "T-Shirts"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Polos"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Shirts(Butoom Ups)"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Short Sleeve T-Shirts"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Name = "Sweaters & Knitwear"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Name = "Sweatshirts & Hoodies"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Name = "Tank Tops & Sleeveless"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Name = "Jerseys"
                        },
                        new
                        {
                            Id = 100,
                            CategoryId = 2,
                            Name = "Casual Pants"
                        },
                        new
                        {
                            Id = 101,
                            CategoryId = 2,
                            Name = "Cropped Pants"
                        },
                        new
                        {
                            Id = 102,
                            CategoryId = 2,
                            Name = "Denim"
                        },
                        new
                        {
                            Id = 103,
                            CategoryId = 2,
                            Name = "Leggings"
                        },
                        new
                        {
                            Id = 104,
                            CategoryId = 2,
                            Name = "Overalls & Jumpsuits"
                        },
                        new
                        {
                            Id = 105,
                            CategoryId = 2,
                            Name = "Shorts"
                        },
                        new
                        {
                            Id = 106,
                            CategoryId = 2,
                            Name = "Sweatpants & Joggers"
                        },
                        new
                        {
                            Id = 107,
                            CategoryId = 2,
                            Name = "Swimwear"
                        },
                        new
                        {
                            Id = 200,
                            CategoryId = 3,
                            Name = "Bombers"
                        },
                        new
                        {
                            Id = 201,
                            CategoryId = 3,
                            Name = "Cloaks & Capes"
                        },
                        new
                        {
                            Id = 202,
                            CategoryId = 3,
                            Name = "Denim Jackets"
                        },
                        new
                        {
                            Id = 203,
                            CategoryId = 3,
                            Name = "Heavy Coats"
                        },
                        new
                        {
                            Id = 204,
                            CategoryId = 3,
                            Name = "Leather Jackets"
                        },
                        new
                        {
                            Id = 205,
                            CategoryId = 3,
                            Name = "Light Jackets"
                        },
                        new
                        {
                            Id = 206,
                            CategoryId = 3,
                            Name = "Parkas"
                        },
                        new
                        {
                            Id = 207,
                            CategoryId = 3,
                            Name = "Raincoats"
                        },
                        new
                        {
                            Id = 208,
                            CategoryId = 3,
                            Name = "Vests"
                        },
                        new
                        {
                            Id = 300,
                            CategoryId = 4,
                            Name = "Casual Leather Shoes"
                        },
                        new
                        {
                            Id = 301,
                            CategoryId = 4,
                            Name = "Formal Shoes"
                        },
                        new
                        {
                            Id = 302,
                            CategoryId = 4,
                            Name = "Hi-Top Sneakers"
                        },
                        new
                        {
                            Id = 303,
                            CategoryId = 4,
                            Name = "Low-Top Sneakers"
                        },
                        new
                        {
                            Id = 304,
                            CategoryId = 4,
                            Name = "Sandals"
                        },
                        new
                        {
                            Id = 305,
                            CategoryId = 4,
                            Name = "Slip Ons"
                        },
                        new
                        {
                            Id = 400,
                            CategoryId = 5,
                            Name = "Blazers"
                        },
                        new
                        {
                            Id = 401,
                            CategoryId = 5,
                            Name = "Formal Shirting"
                        },
                        new
                        {
                            Id = 402,
                            CategoryId = 5,
                            Name = "Formal Trousers"
                        },
                        new
                        {
                            Id = 403,
                            CategoryId = 5,
                            Name = "Suits"
                        },
                        new
                        {
                            Id = 404,
                            CategoryId = 5,
                            Name = "Tuxedos"
                        },
                        new
                        {
                            Id = 405,
                            CategoryId = 5,
                            Name = "Vests"
                        },
                        new
                        {
                            Id = 500,
                            CategoryId = 6,
                            Name = "Bags & Luggage"
                        },
                        new
                        {
                            Id = 501,
                            CategoryId = 6,
                            Name = "Belts"
                        },
                        new
                        {
                            Id = 502,
                            CategoryId = 6,
                            Name = "Glasses"
                        },
                        new
                        {
                            Id = 503,
                            CategoryId = 6,
                            Name = "Gloves & Scarves"
                        },
                        new
                        {
                            Id = 504,
                            CategoryId = 6,
                            Name = "Hats"
                        },
                        new
                        {
                            Id = 505,
                            CategoryId = 6,
                            Name = "Jewelry & Watches"
                        },
                        new
                        {
                            Id = 506,
                            CategoryId = 6,
                            Name = "Wallets"
                        },
                        new
                        {
                            Id = 507,
                            CategoryId = 6,
                            Name = "Miscellaneous"
                        },
                        new
                        {
                            Id = 508,
                            CategoryId = 6,
                            Name = "Periodicals"
                        },
                        new
                        {
                            Id = 509,
                            CategoryId = 6,
                            Name = "Socks & Underwear"
                        },
                        new
                        {
                            Id = 510,
                            CategoryId = 6,
                            Name = "Sunglasses"
                        },
                        new
                        {
                            Id = 511,
                            CategoryId = 6,
                            Name = "Supreme"
                        },
                        new
                        {
                            Id = 512,
                            CategoryId = 6,
                            Name = "Ties & Pocketsquares"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TheSneakersMob.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TheSneakersMob.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheSneakersMob.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TheSneakersMob.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheSneakersMob.Models.Auction", b =>
                {
                    b.HasOne("TheSneakersMob.Models.Client", "Auctioner")
                        .WithMany("AuctionsCreated")
                        .HasForeignKey("AuctionerId");

                    b.HasOne("TheSneakersMob.Models.Client", "Buyer")
                        .WithMany("AuctionsWon")
                        .HasForeignKey("BuyerId");

                    b.HasOne("TheSneakersMob.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.OwnsMany("TheSneakersMob.Models.Bid", "Bids", b1 =>
                        {
                            b1.Property<int>("AuctionId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int?>("BidderId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime2");

                            b1.HasKey("AuctionId", "Id");

                            b1.HasIndex("BidderId");

                            b1.ToTable("Bid");

                            b1.WithOwner()
                                .HasForeignKey("AuctionId");

                            b1.HasOne("TheSneakersMob.Models.Client", "Bidder")
                                .WithMany()
                                .HasForeignKey("BidderId");

                            b1.OwnsOne("TheSneakersMob.Models.Money", "Amount", b2 =>
                                {
                                    b2.Property<int>("BidAuctionId")
                                        .HasColumnType("int");

                                    b2.Property<int>("BidId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<decimal>("Amount")
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<int>("Currency")
                                        .HasColumnType("int");

                                    b2.HasKey("BidAuctionId", "BidId");

                                    b2.ToTable("Bid");

                                    b2.WithOwner()
                                        .HasForeignKey("BidAuctionId", "BidId");
                                });
                        });

                    b.OwnsOne("TheSneakersMob.Models.Feedback", "Feedback", b1 =>
                        {
                            b1.Property<int>("AuctionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Comment")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Stars")
                                .HasColumnType("int");

                            b1.HasKey("AuctionId");

                            b1.ToTable("Auctions");

                            b1.WithOwner()
                                .HasForeignKey("AuctionId");
                        });

                    b.OwnsMany("TheSneakersMob.Models.HashTag", "HashTags", b1 =>
                        {
                            b1.Property<int>("AuctionId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Title")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AuctionId", "Id");

                            b1.ToTable("Auctions_HashTags");

                            b1.WithOwner()
                                .HasForeignKey("AuctionId");
                        });

                    b.OwnsOne("TheSneakersMob.Models.Money", "DirectBuyPrice", b1 =>
                        {
                            b1.Property<int>("AuctionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<int>("Currency")
                                .HasColumnType("int");

                            b1.HasKey("AuctionId");

                            b1.ToTable("Auctions");

                            b1.WithOwner()
                                .HasForeignKey("AuctionId");
                        });

                    b.OwnsOne("TheSneakersMob.Models.Money", "InitialPrize", b1 =>
                        {
                            b1.Property<int>("AuctionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<int>("Currency")
                                .HasColumnType("int");

                            b1.HasKey("AuctionId");

                            b1.ToTable("Auctions");

                            b1.WithOwner()
                                .HasForeignKey("AuctionId");
                        });

                    b.OwnsMany("TheSneakersMob.Models.Report", "Reports", b1 =>
                        {
                            b1.Property<int>("AuctionId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Reason")
                                .HasColumnType("int");

                            b1.Property<int?>("ReporterId")
                                .HasColumnType("int");

                            b1.Property<int>("Severity")
                                .HasColumnType("int");

                            b1.HasKey("AuctionId", "Id");

                            b1.HasIndex("ReporterId");

                            b1.ToTable("Auctions_Reports");

                            b1.WithOwner()
                                .HasForeignKey("AuctionId");

                            b1.HasOne("TheSneakersMob.Models.Client", "Reporter")
                                .WithMany()
                                .HasForeignKey("ReporterId");
                        });
                });

            modelBuilder.Entity("TheSneakersMob.Models.ClientFollower", b =>
                {
                    b.HasOne("TheSneakersMob.Models.Client", "Client")
                        .WithMany("Followers")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TheSneakersMob.Models.Client", "Follower")
                        .WithMany("Following")
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheSneakersMob.Models.Like", b =>
                {
                    b.HasOne("TheSneakersMob.Models.Auction", "Auction")
                        .WithMany("Likes")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TheSneakersMob.Models.Sell", "Sell")
                        .WithMany("Likes")
                        .HasForeignKey("SellId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TheSneakersMob.Models.Client", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TheSneakersMob.Models.Product", b =>
                {
                    b.HasOne("TheSneakersMob.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("TheSneakersMob.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("TheSneakersMob.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.HasOne("TheSneakersMob.Models.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId");

                    b.OwnsMany("TheSneakersMob.Models.Designer", "Designers", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Title")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId", "Id");

                            b1.ToTable("Designer");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsMany("TheSneakersMob.Models.Photo", "Photos", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Title")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Url")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId", "Id");

                            b1.ToTable("Photo");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });
                });

            modelBuilder.Entity("TheSneakersMob.Models.Sell", b =>
                {
                    b.HasOne("TheSneakersMob.Models.Client", "Buyer")
                        .WithMany("Buys")
                        .HasForeignKey("BuyerId");

                    b.HasOne("TheSneakersMob.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("TheSneakersMob.Models.Client", "Seller")
                        .WithMany("Sells")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("TheSneakersMob.Models.Feedback", "Feedback", b1 =>
                        {
                            b1.Property<int>("SellId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Comment")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Stars")
                                .HasColumnType("int");

                            b1.HasKey("SellId");

                            b1.ToTable("Sells");

                            b1.WithOwner()
                                .HasForeignKey("SellId");
                        });

                    b.OwnsMany("TheSneakersMob.Models.HashTag", "HashTags", b1 =>
                        {
                            b1.Property<int>("SellId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Title")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SellId", "Id");

                            b1.ToTable("Sells_HashTags");

                            b1.WithOwner()
                                .HasForeignKey("SellId");
                        });

                    b.OwnsOne("TheSneakersMob.Models.Money", "Price", b1 =>
                        {
                            b1.Property<int>("SellId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<int>("Currency")
                                .HasColumnType("int");

                            b1.HasKey("SellId");

                            b1.ToTable("Sells");

                            b1.WithOwner()
                                .HasForeignKey("SellId");
                        });

                    b.OwnsMany("TheSneakersMob.Models.Report", "Reports", b1 =>
                        {
                            b1.Property<int>("SellId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Reason")
                                .HasColumnType("int");

                            b1.Property<int?>("ReporterId")
                                .HasColumnType("int");

                            b1.Property<int>("Severity")
                                .HasColumnType("int");

                            b1.HasKey("SellId", "Id");

                            b1.HasIndex("ReporterId");

                            b1.ToTable("Sells_Reports");

                            b1.HasOne("TheSneakersMob.Models.Client", "Reporter")
                                .WithMany()
                                .HasForeignKey("ReporterId");

                            b1.WithOwner()
                                .HasForeignKey("SellId");
                        });
                });

            modelBuilder.Entity("TheSneakersMob.Models.Size", b =>
                {
                    b.HasOne("TheSneakersMob.Models.Category", null)
                        .WithMany("ValidSizes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheSneakersMob.Models.SubCategory", b =>
                {
                    b.HasOne("TheSneakersMob.Models.Category", null)
                        .WithMany("ValidSubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
